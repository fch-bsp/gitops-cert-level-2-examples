https://github.com/fch-bsp/gitops-certification-examples

testar  2

argocd app demo \
--project default \
--repo https://github.com/fch-bsp/gitops-certification-examples \
--path "./simple-app" \
--dest-namespace default \
--dest-server https://kubernetes.default.svc


argocd app create demo \
--project default \
--repo https://github.com/fch-bsp/gitops-certification-examples  \
--path "./secret-app/manifests" \
--dest-namespace kube-system \
--dest-server https://kubernetes.default.svc


argocd app create 3-apps \
--project default \
--repo https://github.com/codefresh-contrib/gitops-certification-examples  \
--path "./helm-app/" \
--dest-namespace default \
--dest-server https://kubernetes.default.svc


argocd app create helm-gitops-example \
--project default \
--repo  https://github.com/codefresh-contrib/gitops-certification-examples  \
--path "./declarative/multiple-apps" \
--dest-namespace argocd \
--dest-server https://kubernetes.default.svc

--------

argocd app create demo \
--project default \
--repo https://github.com/codefresh-contrib/gitops-certification-examples \
--path "./helm-app/" \
--sync-policy auto \
--dest-namespace default \
--dest-server https://kubernetes.default.svc

---
deletar app=
argocd app delete kustomize-gitops-example
-----

argocd app create kustomize-gitops-example \
--project default \
--repo  https://github.com/codefresh-contrib/gitops-certification-examples \
--path "./kustomize-app/overlays/staging" \
--sync-policy auto \
--dest-namespace default \
--dest-server https://kubernetes.default.svc


------------
argocd app delete demo
----

argocd app create demo \
--project default \
--repo https://github.com/codefresh-contrib/gitops-certification-examples \
--path ./kustomize-app/overlays/staging \
--sync-policy auto \
--dest-namespace default \
--dest-server https://kubernetes.default.svc


app blue0green

argocd app create argo-rollouts-controller \
--project default \
--repo https://github.com/codefresh-contrib/gitops-certification-examples \
--path ./argo-rollouts-controller \
--sync-policy auto \
--dest-namespace argo-rollouts \
--dest-server https://kubernetes.default.svc

argocd app create demo \
--project default \
--repo https://github.com/codefresh-contrib/gitops-certification-examples \
--path ./blue-green-app \
--dest-namespace default \
--dest-server https://kubernetes.default.svc


argocd app list
argocd app get demo
argocd app history demo



comandos 
::

argocd



A implantação de novas versões de seu aplicativo com um alto grau de confiança é uma meta desejável, pois obter recursos de forma confiável para produção é uma das características mais importantes das organizações em rápida evolução

comando: 
argocd app sync demo
argocd app wait demo



kubectl scale --replicas=3 deployment simple-deployment

kubectl scale --replicas=3 deployment simple-deployment
kubectl get deployment simple-deployment




argocd app create demo \ --project default \ --repo https://github.com/fch-bsp/gitops-certification-examples \ --path "./sync-strategies" \ --dest-namespace default \ --dest-server https://kubernetes.default.svc

criação:




argocd app create external-app \
--project default \
--repo https://github.com/fch-bsp/gitops-cert-level-2-examples \
--path "./simple-application" \
--dest-namespace argocd \
--dest-server https://kubernetes.default.svc


kubectl apply -f https://raw.githubusercontent.com/fch-bsp/gitops-cert-level-2-examples/edit/main/app-of-apps/root-app/my-application.yml -n argocd

kubectl apply -f https://github.com/fch-bsp/gitops-cert-level-2-examples/edit/main/app-of-apps/root-app/my-application.yml -n argocd

kubectl apply -f https://raw.githubusercontent.com/fch-bsp/gitops-cert-level-2-examples/main/app-of-apps/root-app/my-application.yml -n argocd

argocd login kubernetes-vm:30443 --insecure --username admin --password S4N4Bx2oTRf-Z-Ir

https://github.com/codefresh-contrib/gitops-cert-level-2-examples.git


argocd login kubernetes-vm:30443 --insecure --username admin --password 4V33FT3U9LaSgvC5


repoURL: https://github.com/fch-bsp/gitops-cert-level-2-examples

argocd app my-favorite-apps \
--project default \
--repo https://github.com/fch-bsp/gitops-cert-level-2-examples.git \
--path "./app-of-apps/my-app-list" \
--dest-namespace ambassador \
--dest-server https://kubernetes.default.svc

argocd app create demo \
--project default \
--repo https://github.com/fch-bsp/gitops-certification-examples \
--path "./canary-app" \
--dest-namespace default \
--dest-server https://kubernetes.default.svc

lista:

argocd app list
argocd app get kustomize-gitops-example
argocd app history kustomize-gitops-example

delete:

argocd app delete my-favorite-apps


criação 2 :

argocd app my-application-sets \
--project name default \
--repo https://github.com/fch-bsp/gitops-certification-examples \
--path ./application-sets/my-application-sets/ 
--sync-policy auto \
--dest-namespace argocd \
--dest-server https://kubernetes.default.svc

kubectl get all



argocd app demo \
--project default \
--repo https://github.com/fch-bsp/gitops-certification-examples \
--path "./argo-rollouts-controller" \
--dest-namespace argo-rollouts \
--dest-server https://kubernetes.default.svc


argocd app example01 \
--project default \
--repo https://github.com/fch-bsp/gitops-cert-level-2-examples \
--path "./sync-hooks-waves/01-default-order" \
--dest-namespace example01 \
--dest-server https://kubernetes.default.svc

kubectl apply -f https://raw.githubusercontent.com/fch-bsp/gitops-cert-level-2-examples/main/app-of-apps/root-app/my-application.yml -n argocd
========================



argocd app create prod \
--project default \
--repo https://github.com/fch-bsp/gitops-cert-level-2-examples.git \
--path ./environment-promotion/envs/prod \
--dest-namespace prod \
--dest-server https://kubernetes.default.svc


argocd app create staging \
--project default \
--repo https://github.com/fch-bsp/gitops-cert-level-2-examples.git \
--path ./environment-promotion/envs/staging \
--dest-namespace staging \
--dest-server https://kubernetes.default.svc